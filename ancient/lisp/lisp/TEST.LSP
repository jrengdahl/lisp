(quiet)

(defun mkar (n)
	(if (= n 1)
	    (list 0)
	    (cons 0 (mkar (- n 1)))))

(defun incar (n a)
	(if (= n 0)
	    (cons (+ (car a) 1)
		  (cdr a))
	    (cons (car a)
		  (incar (- n 1) (cdr a)))))

(defun rtest (n)
	(setq cnts (mkar 100))
	(do ((x 0 (+ x 1)))
	    ((> x n))
	    (setq r (random 100))
	    (print x)
	    (if (> r 99)
		(print r)
		(setq cnts (incar r cnts)))))
	
(defun stest (n)
	(do ((x 0 (+ x 1)))
	    ((> x n))
	    (princ x)
	    (princ " ")
	    (princ (isqrt x))
	    (terpri)))

(princ ";test.lsp loaded") (terpri)
