(print 'set)
(set 'a 132)
(print '+)
(+ 1 2)
(print '-)
(- 3 1)
(print '*)
(* 3 4)
(print '/)
(/ 3 4)
(print 'numerator)
(numerator (/ 3 4))
(print 'denominator)
(denominator (/ 3 4))
(print '=)
(= 2 3)
(print '>)
(> 2 3)
(print '<)
(< 2 3)
(print '>=)
(>= 2 3)
(print '<=)
(<= 2 3)
(print '/=)
(/= 2 3)
(print 'quo)
(quo 5 3)
(print 'rem)
(rem 5 3)
(print 'gcd)
(gcd 12 16)
(print 'lcm)
(lcm 12 16)
(print 'reduce)
(reduce 100/15)
(print 'print)
(print 1) (print 1/2) (print 'a) (print "string") (print '(l i s t))
(print 'prin1)
(prin1 1) (prin1 1/2) (prin1 'a) (prin1 "string") (prin1 '(l i s t))
(print 'princ)
(princ 1) (princ 1/2) (princ 'a) (princ "string") (princ '(l i s t))
(print 'terpri)
(terpri)
(print 'symbol-function)
(symbol-function '+)
(print 'eval)
(eval '(+ 1 2))
(print 'apply)
(apply '+ '(1 2))
(print 'funcall)
(funcall '+ 1 2)
(print 'eq)
(eq 'a 'a)
(print 'eql)
(eql 1 2)
(print 'equal)
(equal '(a b) '(a b))
(print 'null)
(null nil)
(print 'car)
(car '(1))
(print 'cdr)
(cdr '(0.1))
(print 'caar)
(caar '((1)))
(print 'cadr)
(cadr '(0 1))
(print 'cdar)
(cdar '((0.1)))
(print 'cddr)
(cddr '(0 0.1))
(print 'caaar)
(caaar '(((1))))
(print 'caadr)
(caadr '(0 (1)))
(print 'cadar)
(cadar '((0 1)))
(print 'caddr)
(caddr '(0 0 1))
(print 'cdaar)
(cdaar '(((0.1))))
(print 'cdadr)
(cdadr '(0 (0.1)))
(print 'cddar)
(cddar '((0 0.1)))
(print 'cdddr)
(cdddr '(0 0 0.1))
(print 'cons)
(cons 'a 'b)
(print 'list)
(list 'a 'b)
(print 'append)
(append '(1 2 3) '(4 5 6))

